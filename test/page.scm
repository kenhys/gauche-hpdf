;;;
;;; Test hpdf
;;;

(use gauche.test)
(use math.mt-random)

(test-start "hpdf")
(use hpdf)
(test-module 'hpdf)

(define (test-subsection msg)
  (format #t "~a()\n" msg))

(test-section "hpdf font")

;; expect hpdf-new and hpdf-add-page suceeds
(define test-page (hpdf-add-page (hpdf-new)))

;; portrait
(test-subsection "HPDF_PAGE_PORTRAIT hpdf-page-set-size")
(test* "HPDF_PAGE_SIZE_LETTER" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_LETTER HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_LEGAL" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_LEGAL HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_A3" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_A3 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_A4" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_A4 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_A5" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_A5 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_B4" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_B4 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_B5" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_B5 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_EXECUTIVE" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_EXECUTIVE HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_US4x6" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_US4x6 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_US4x8" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_US4x8 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_US5x7" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_US5x7 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_COMM10" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_COMM10 HPDF_PAGE_PORTRAIT))

;; landscape
(test-subsection "HPDF_PAGE_LANDSPAPE hpdf-page-set-size")
(test* "HPDF_PAGE_SIZE_LETTER" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_LETTER HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_LEGAL" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_LEGAL HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_A3" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_A3 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_A4" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_A4 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_A5" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_A5 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_B4" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_B4 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_B5" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_B5 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_EXECUTIVE" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_EXECUTIVE HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_US4x6" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_US4x6 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_US4x8" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_US4x8 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_US5x7" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_US5x7 HPDF_PAGE_LANDSCAPE))
(test* "HPDF_PAGE_SIZE_COMM10" HPDF_OK (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_COMM10 HPDF_PAGE_LANDSCAPE))

(define (test-hpdf-page-get-size page_style page_direction width height)
  (let* ((page (hpdf-add-page (hpdf-new)))
         (s (hpdf-page-set-size page page_style page_direction))
         (w (hpdf-page-get-width page))
         (h (hpdf-page-get-height page))
         )
    (if (and (= width w) (= height h))
        #t
        #f)))

(test-subsection "HPDF_PAGE_PORTRAIT hpdf-page-get-width/height")
(test* "HPDF_PAGE_SIZE_LETTER" #t (test-hpdf-page-get-size LETTER HPDF_PAGE_PORTRAIT 612 792))
(test* "HPDF_PAGE_SIZE_LEGAL" #t (test-hpdf-page-get-size LEGAL HPDF_PAGE_PORTRAIT 612 1008))
(test* "HPDF_PAGE_SIZE_A3" #t (test-hpdf-page-get-size A3 HPDF_PAGE_PORTRAIT 841.8900146484375 1199.551025390625))
(test* "HPDF_PAGE_SIZE_A4" #t (test-hpdf-page-get-size A4 HPDF_PAGE_PORTRAIT 595.2760009765625 841.8900146484375))
(test* "HPDF_PAGE_SIZE_A5" #t (test-hpdf-page-get-size A5 HPDF_PAGE_PORTRAIT 419.52801513671875 595.2760009765625))
(test* "HPDF_PAGE_SIZE_B4" #t (test-hpdf-page-get-size B4 HPDF_PAGE_PORTRAIT 708.6610107421875 1000.6300048828125))
(test* "HPDF_PAGE_SIZE_B5" #t (test-hpdf-page-get-size B5 HPDF_PAGE_PORTRAIT 498.89801025390625 708.6610107421875))
(test* "HPDF_PAGE_SIZE_EXECUTIVE" #t (test-hpdf-page-get-size EXECUTIVE HPDF_PAGE_PORTRAIT 522 756))
(test* "HPDF_PAGE_SIZE_US4x6" #t (test-hpdf-page-get-size US4x6 HPDF_PAGE_PORTRAIT 288 432))
(test* "HPDF_PAGE_SIZE_US4x8" #t (test-hpdf-page-get-size US4x8 HPDF_PAGE_PORTRAIT 288 576))
(test* "HPDF_PAGE_SIZE_US5x7" #t (test-hpdf-page-get-size US5x7 HPDF_PAGE_PORTRAIT 360 504))
(test* "HPDF_PAGE_SIZE_COMM10" #t (test-hpdf-page-get-size COMM10 HPDF_PAGE_PORTRAIT 297 684))

(test-subsection "HPDF_PAGE_LANDSPAPE hpdf-page-get-width/height")
(test* "HPDF_PAGE_SIZE_LETTER" #t (test-hpdf-page-get-size LETTER HPDF_PAGE_LANDSCAPE 792 612))
(test* "HPDF_PAGE_SIZE_LEGAL" #t (test-hpdf-page-get-size LEGAL HPDF_PAGE_LANDSCAPE 1008 612))
(test* "HPDF_PAGE_SIZE_A3" #t (test-hpdf-page-get-size A3 HPDF_PAGE_LANDSCAPE 1199.551025390625 841.8900146484375))
(test* "HPDF_PAGE_SIZE_A4" #t (test-hpdf-page-get-size A4 HPDF_PAGE_LANDSCAPE 841.8900146484375 595.2760009765625))
(test* "HPDF_PAGE_SIZE_A5" #t (test-hpdf-page-get-size A5 HPDF_PAGE_LANDSCAPE 595.2760009765625 419.52801513671875))
(test* "HPDF_PAGE_SIZE_B4" #t (test-hpdf-page-get-size B4 HPDF_PAGE_LANDSCAPE 1000.6300048828125 708.6610107421875))
(test* "HPDF_PAGE_SIZE_B5" #t (test-hpdf-page-get-size B5 HPDF_PAGE_LANDSCAPE 708.6610107421875 498.89801025390625))
(test* "HPDF_PAGE_SIZE_EXECUTIVE" #t (test-hpdf-page-get-size EXECUTIVE HPDF_PAGE_LANDSCAPE 756 522))
(test* "HPDF_PAGE_SIZE_US4x6" #t (test-hpdf-page-get-size US4x6 HPDF_PAGE_LANDSCAPE 432 288))
(test* "HPDF_PAGE_SIZE_US4x8" #t (test-hpdf-page-get-size US4x8 HPDF_PAGE_LANDSCAPE 576 288))
(test* "HPDF_PAGE_SIZE_US5x7" #t (test-hpdf-page-get-size US5x7 HPDF_PAGE_LANDSCAPE 504 360))
(test* "HPDF_PAGE_SIZE_COMM10" #t (test-hpdf-page-get-size COMM10 HPDF_PAGE_LANDSCAPE 684 297))

;; error
(test* "-1" *test-error* (hpdf-page-set-size (hpdf-add-page (hpdf-new)) -1 HPDF_PAGE_PORTRAIT))
(test* "HPDF_PAGE_SIZE_EOF" *test-error* (hpdf-page-set-size (hpdf-add-page (hpdf-new)) HPDF_PAGE_SIZE_EOF HPDF_PAGE_PORTRAIT))
(define (test-page-content pdf m page)
  (let* ((font (hpdf-get-font pdf "Helvetica" ""))
         (h (hpdf-page-get-height page))
         (w (hpdf-page-get-width page))
         (s (hpdf-page-begin-text page))
         (i (round (/ w 2)))
         (st (hpdf-page-move-text-pos page (mt-random-integer m 290) (- h 36)))
         (s (hpdf-page-set-font-and-size page font 24))
         (s (hpdf-page-set-text-leading page 24))
         (s (hpdf-page-show-text page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-show-text-next-line page "Hello, I'm Robot."))
         (s (hpdf-page-end-text page))
         )
    page))
  
(define (test-hpdf-page-set-slide-show file slide)
  (let* ((pdf (hpdf-new))
         (disp 3)
         (trans 5)
         (m (make <mersenne-twister> :seed (sys-time)))
         (s (if (equal? slide #t)
                (begin0
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_WIPE_RIGHT disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_WIPE_UP disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_WIPE_LEFT disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_WIPE_DOWN disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BARN_DOORS_HORIZONTAL_OUT disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BARN_DOORS_HORIZONTAL_IN disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BARN_DOORS_VERTICAL_OUT disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BARN_DOORS_VERTICAL_IN disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BOX_OUT disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BOX_IN disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BLINDS_HORIZONTAL disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_BLINDS_VERTICAL disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_DISSOLVE disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_GLITTER_RIGHT disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_GLITTER_DOWN disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_GLITTER_TOP_LEFT_TO_BOTTOM_RIGHT                                          disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) HPDF_TS_REPLACE disp trans)
                 (hpdf-save-to-file pdf file)
                 )
                (begin0
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) slide disp trans)
                 (hpdf-page-set-slide-show (test-page-content pdf m (hpdf-add-page pdf)) slide disp trans)
                 (hpdf-save-to-file pdf file)
                 )
                )))
    s))

(test* "wipe-right" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-wr.pdf" HPDF_TS_WIPE_RIGHT))
(test* "wipe-up" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-wu.pdf" HPDF_TS_WIPE_UP))
(test* "wipe-left" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-wl.pdf" HPDF_TS_WIPE_LEFT))
(test* "wipe-down" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-wd.pdf" HPDF_TS_WIPE_DOWN))
(test* "barn-hor-out" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-bho.pdf" HPDF_TS_BARN_DOORS_HORIZONTAL_OUT))
(test* "barn-hor-in" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-bhi.pdf" HPDF_TS_BARN_DOORS_HORIZONTAL_IN))
(test* "barn-ver-out" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-bvo.pdf" HPDF_TS_BARN_DOORS_VERTICAL_OUT))
(test* "barn-ver-in" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-bvi.pdf" HPDF_TS_BARN_DOORS_VERTICAL_IN))
(test* "box-out" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-box-out.pdf" HPDF_TS_BOX_OUT))
(test* "box-in" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-box-in.pdf" HPDF_TS_BOX_IN))
(test* "blinds-hor" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-blindsh.pdf" HPDF_TS_BLINDS_HORIZONTAL))
(test* "blinds-ver" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-blindsv.pdf" HPDF_TS_BLINDS_VERTICAL))
(test* "dissolve" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-dissolve.pdf" HPDF_TS_DISSOLVE))
(test* "glitter-right" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-glitterr.pdf" HPDF_TS_GLITTER_RIGHT))
(test* "glitter-down" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-glitterd.pdf" HPDF_TS_GLITTER_DOWN))
(test* "glitter-tl2br" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-glittertl2br.pdf" HPDF_TS_GLITTER_TOP_LEFT_TO_BOTTOM_RIGHT))
(test* "glitter-replace" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-replace.pdf" HPDF_TS_REPLACE))
(test* "all" HPDF_OK (test-hpdf-page-set-slide-show "data/hpdf-page-set-slide-show-all.pdf" #t))

;; epilogue
(test-end)





