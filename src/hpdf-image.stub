;;;
;;; hpdf-image.stub
;;;

"
#include \"gauche-hpdf.h\"
#include <hpdf.h>
"

(include "gauche-hpdf.types")

;;
;; Image Data
;;
(define-cproc hpdf-load-png-image-from-file
  (doc::<hpdf-doc> filename::<const-cstring>) ::<hpdf-image>
  (let* ([image::ScmHpdfImage* (SCM_NEW ScmHpdfImage)]
	 [null (SCM_SET_CLASS image SCM_CLASS_HPDF_IMAGE)])
    (set! (-> image h) (HPDF_LoadPngImageFromFile (-> doc h) filename))
    (result image)))

(define-cproc hpdf-load-png-image-from-file2
  (doc::<hpdf-doc> filename::<const-cstring>) ::<hpdf-image>
  (let* ([image::ScmHpdfImage* (SCM_NEW ScmHpdfImage)]
	 [null (SCM_SET_CLASS image SCM_CLASS_HPDF_IMAGE)])
    (set! (-> image h) (HPDF_LoadPngImageFromFile2 (-> doc h) filename))
    (result image)))

(define-cproc hpdf-load-jpeg-image-from-file
  (doc::<hpdf-doc> filename::<const-cstring>)
  (let* ([image::ScmHpdfImage* (SCM_NEW ScmHpdfImage)]
	 [null (SCM_SET_CLASS image SCM_CLASS_HPDF_IMAGE)])
    (set! (-> image h) (HPDF_LoadJpegImageFromFile (-> doc h) filename))
    (result image)))

(define-cproc hpdf-load-raw-image-from-file
  (doc::<hpdf-doc> 
   filename::<const-cstring>
   width::<uint> height::<uint> color_space::<fixnum>) ::<hpdf-image>
  (let* ([image::ScmHpdfImage* (SCM_NEW ScmHpdfImage)]
	 [null (SCM_SET_CLASS image SCM_CLASS_HPDF_IMAGE)])
    (set! (-> image h)
	  (HPDF_LoadRawImageFromFile (-> doc h) filename width height color_space))
    (result image)))

;; FIXME
(define-cproc hpdf-load-raw-image-from-mem
  (doc::<hpdf-doc>
   buf::<const-cstring>
   width::<uint> height::<uint> color_space::<fixnum>
   bits_per_component::<uint>) ::<hpdf-image>
  (let* ([image::ScmHpdfImage* (SCM_NEW ScmHpdfImage)])
    (SCM_SET_CLASS image SCM_CLASS_HPDF_IMAGE)
    (set! (-> image h)
	  (HPDF_LoadRawImageFromMem
	   (-> doc h)
	   buf width height color_space bits_per_component))
    (result image)))

(define-cproc hpdf-image-add-smask
  (image::<hpdf-image> smask::<hpdf-image>) ::<uint>
  (result (HPDF_Image_AddSMask (-> image h) (-> smask h))))

(define-cproc hpdf-image-get-size (image::<hpdf-image>) ::<hpdf-point>
  (let* ([point::ScmHpdfPoint* (SCM_NEW ScmHpdfPoint)])
    (SCM_SET_CLASS point SCM_CLASS_HPDF_POINT)
    (set! (-> point h) (HPDF_Image_GetSize (-> image h)))
    (result point)))

(define-cproc hpdf-image-get-size2
  (image::<hpdf-image> size::<hpdf-point>) ::<ulong>
  (result (HPDF_Image_GetSize2 (-> image h) (& (-> size h)))))

(define-cproc hpdf-image-get-width
  (img::<hpdf-image>) ::<uint>
  (result (HPDF_Image_GetWidth (-> img h))))

(define-cproc hpdf-image-get-height
  (image::<hpdf-image>) ::<uint>
  (result (HPDF_Image_GetHeight (-> image h))))

(define-cproc hpdf-image-get-bits-per-component
  (image::<hpdf-image>) ::<uint>
  (result (HPDF_Image_GetBitsPerComponent (-> image h))))

(define-cproc hpdf-image-get-color-space
  (image::<hpdf-image>) ::<const-cstring>
  (result (HPDF_Image_GetColorSpace (-> image h))))

(define-cproc hpdf-image-set-color-mask (image::<hpdf-image> rmin::<uint> rmax::<uint> gmin::<uint> gmax::<uint> bmin::<uint> bmax::<uint>) ::<ulong>
  (result (HPDF_Image_SetColorMask (-> image h) rmin rmax gmin gmax bmin bmax)))

(define-cproc hpdf-image-set-mask-image
  (image::<hpdf-image> mask_image::<hpdf-image>) ::<ulong>
  (result (HPDF_Image_SetMaskImage (-> image h) (-> mask_image h))))

;; Local variables:
;; mode: scheme
;; end:
